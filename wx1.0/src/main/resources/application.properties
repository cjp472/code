server.port=80
#logging.file=springboot.log
#时间戳统一转换
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#这个是时区，一定要加，否则会默认为格林尼治时间，即少8小时
spring.jackson.time-zone=GMT+8
logging.level.com.lx=info
logging.level.com.lx.mapper=debug
# 定位页面的目录到static/下
spring.mvc.view.prefix=/
#spring.mvc.view.suffix=.html

#配置错误页面路径
server.error.path=/error

#redis jedis配置
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=123
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=10000
#spring-session 使用
spring.session.store-type=none


#logging.level.io.github.biezhi=ERROR

# mybatis 配置
mybatis.type-aliases-package=com.lx.entity
mybatis.mapper-locations=classpath:mapper/*.xml

#数据库连接
spring.datasource.url=jdbc:sqlserver://152.136.102.120:1433;DatabaseName=my_wx
spring.datasource.username=sa
spring.datasource.password=Ab12345678
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.hikari.login-timeout=1000
spring.datasource.hikari.maximum-pool-size=30

# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
# 不要设置过大，如果过大，启动项目会报错：打开文件数过多
server.undertow.io-threads=16

# 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
# 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
server.undertow.worker-threads=256

# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
server.undertow.buffer-size=1024

# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
server.undertow.buffers-per-region=1024

# 是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers=true